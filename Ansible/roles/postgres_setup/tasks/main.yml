---
- name: Authenticate to AWS ECR
  shell: |
    aws ecr get-login-password --region {{ AWS_REGION }} | docker login --username AWS --password-stdin {{ AWS_ID }}.dkr.ecr.{{ AWS_REGION }}.amazonaws.com
  environment:
    AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
    AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
  register: ecr_login
  changed_when: "'Login Succeeded' in ecr_login.stdout"


- name: Generate Kubernetes Secrets for PostgreSQL
  template:
    src: kubernetes-secrets.yml.j2
    dest: /tmp/kubernetes-secrets.yml

- name: Apply PostgreSQL Secrets in AWS EKS
  command: kubectl apply -f /tmp/kubernetes-secrets.yml
  environment:
    AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
    AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
    KUBECONFIG: "/home/ec2-user/.kube/config"
    PATH: "/usr/local/bin:/usr/bin:/bin"

- name: Pull Official PostgreSQL Image
  shell: |
    docker pull postgres:latest

- name: Tag PostgreSQL Image for AWS ECR
  shell: |
    docker tag postgres:latest {{ AWS_ID }}.dkr.ecr.{{ AWS_REGION }}.amazonaws.com/postgres:latest

- name: Push PostgreSQL Image to AWS ECR
  shell: |
    docker push {{ AWS_ID }}.dkr.ecr.{{ AWS_REGION }}.amazonaws.com/postgres:latest

- name: Ensure Kubernetes directory exists on EC2
  file:
    path: /home/ec2-user/kubernetes
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: '0755'

- name: Copy Kubernetes manifests to EC2
  copy:
    src: "{{ playbook_dir }}/../kubernetes/"
    dest: /home/ec2-user/kubernetes
    owner: ec2-user
    group: ec2-user
    mode: '0644'

- name: Deploy PostgreSQL in AWS EKS
  command: kubectl apply -f "/home/ec2-user/kubernetes/postgres-deployment.yml"
  environment:
    AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
    AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
    KUBECONFIG: "/home/ec2-user/.kube/config"
    PATH: "/usr/local/bin:/usr/bin:/bin"

- name: Deploy PostgreSQL Service in AWS EKS
  command: kubectl apply -f "/home/ec2-user/kubernetes/postgres-service.yml"
  environment:
    AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
    AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
    KUBECONFIG: "/home/ec2-user/.kube/config"
    PATH: "/usr/local/bin:/usr/bin:/bin"
